/*!
 * angular-incremental-list v0.2.0
 * https://github.com/tfoxy/angular-incremental-list
 *
 * Copyright 2015 TomÃ¡s Fox
 * Released under the MIT license
 */
!function(){"use strict";function t(){return{restrict:"A",priority:p,controller:f,link:function(t,e,i,n){n.postInitialize()}}}function e(){return{restrict:"A",require:"ilList",link:{pre:function(t,e,i,n){var r=t.$index;if("number"!=typeof r)throw new Error("scope.$index is not a number. Got: "+r);n.scopeCreatedAt(r,t)}}}}function i(){return{restrict:"A",require:["^ilList","ngModel"],link:function(t,e,i,n){var r=n[0],o=n[1],c=i.ilItemModel?t.$eval(i.ilItemModel):t,l={ilList:{changed:{ngModelController:o}}},s=function(){r.listItemChanged(c.$index,l)};o.$viewChangeListeners.push(s)}}}function n(){return{restrict:"A",require:"ilList",priority:d,link:function(t,e,i,n){n.createItem=function(t){return t.$eval(i.ilNewItem)}}}}function r(){return{restrict:"A",require:"ilList",priority:d,link:function(t,e,i,n){n.mustIncrement=function(t,e){return t.$eval(i.ilIncreaseOn,e)}}}}function o(){return{restrict:"A",require:"ilList",priority:d,link:function(t,e,i,n){n.mustIncrement=function(t,e){return t.$eval(i.ilIncrementOn,e)}}}}function c(){return{restrict:"A",require:"ilList",priority:d,link:function(t,e,i,n){n.mustDecrement=function(t,e){return t.$eval(i.ilDecreaseOn,e)}}}}function l(){return{restrict:"A",require:"ilList",priority:d,link:function(t,e,i,n){n.mustDecrement=function(t,e){return t.$eval(i.ilDecrementOn,e)}}}}function s(){return{restrict:"A",require:["^^ilList","ilList"],priority:d,link:function(t,e,i,n){var r=n[0],o=n[1];o.notifyParentList=function(t,e){var n=i.ilListModel?t.$eval(i.ilListModel):t.$parent;r.listItemChanged(n.$index,e)}}}}function u(){return{restrict:"A",require:"ilList",priority:d,link:function(t,e,i,n){var r=parseInt(i.ilMinLength);n.minLength=r>0?r:0}}}function a(){return{restrict:"A",require:"ilList",priority:d,link:function(t,e,i,n){var r=parseInt(i.ilMaxLength);n.maxLength=r>0?r:0}}}function f(t,e){function i(){var t=L.list;if(angular.isUndefined(t)||null===t)throw Error("ilList is "+t+": "+e.ilList)}function n(t,e){if("number"!=typeof t)throw new Error("scope.$index is not a number. Got: "+t);var i=L.list.length,n=r(t);t===i-1&&i<L.maxLength?l(n,e):t===i-2&&i>L.minLength&&s(n,e),L.notifyParentList(n,e)}function r(t){return t>=L.list.length||0>t?null:L.list[t][h]}function o(t){return r(t.$index-1)}function c(t){return r(t.$index+1)}function l(t,e){L.mustIncrement(t,e)?L.list.push(L.createItem(t)):t.$first||s(t,e)}function s(t,e){var i=t.$last?o(t):c(t);L.mustDecrement(t,e)&&L.mustDecrement(i,e)&&(t.$last||L.list.pop(),u(o(t),e))}function u(t,e){var i,n,r=L.minLength-1,c=t;for(i=n=L.list.length-2;i>=r&&L.mustDecrement(c,e);--i,c=o(c));L.list.splice(i+1,n-i)}function a(t){var e=L.list[t.$index];for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)&&"$$"!==i.slice(0,2)){var n=e[i];if(n&&(!Array.isArray(n)||n.length>1)||0===n)return!1}return!0}function f(t,e){var i=e.ilList.changed.ngModelController.$modelValue;return i||0===i}function d(){return{}}function p(){var e=L.list.length,i=r(e-1)||t;if(e<L.minLength){var n=new m(L.minLength-e,L,v);L.scopeCreatedAt=n.scopeCreatedAt.bind(n),n.pushItem(i)}else e>L.maxLength&&L.list.splice(L.maxLength,e-L.maxLength)}function v(t,e){var i=L.list[t];Object.defineProperty(i,h,{configurable:!0,enumerable:!1,value:e}),e.$on("$destroy",function(){delete i[h]})}var L=this;L.createItem=d,L.list=t.$eval(e.ilList),L.listItemChanged=n,L.maxLength=9007199254740991,L.minLength=1,L.mustDecrement=a,L.mustIncrement=f,L.notifyParentList=angular.noop,L.postInitialize=p,L.scopeCreatedAt=v,i()}function m(t,e,i){this._countdown=t,this._vm=e,this._scopeCreatedAt=i}var d=2e3,p=3e3,h="$$ilListScope";angular.module("incrementalList",[]).directive("ilList",t).directive("ilList",e).directive("ilItemModel",i).directive("ilNewItem",n).directive("ilIncreaseOn",r).directive("ilDecreaseOn",c).directive("ilIncrementOn",o).directive("ilDecrementOn",l).directive("ilListModel",s).directive("ilMinLength",u).directive("ilMaxLength",a),f.$inject=["$scope","$attrs"],m.prototype.pushItem=function(t){this._vm.list.push(this._vm.createItem(t)),--this._countdown<=0&&(this._vm.scopeCreatedAt=this._scopeCreatedAt)},m.prototype.scopeCreatedAt=function(t,e){this._scopeCreatedAt(t,e),this.pushItem(e)}}();